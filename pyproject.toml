[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gpu-worker-pool"
version = "1.0.0"
description = "A Python library for intelligent GPU resource allocation and management in multi-worker environments"
readme = "README.md"
license = "MIT"
authors = [
    {name = "GPU Worker Pool Contributors", email = "contributors@gpu-worker-pool.dev"}
]
maintainers = [
    {name = "GPU Worker Pool Contributors", email = "contributors@gpu-worker-pool.dev"}
]
keywords = [
    "gpu",
    "resource-management",
    "worker-pool",
    "allocation",
    "async",
    "machine-learning",
    "distributed-computing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Framework :: AsyncIO"
]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.8.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0"
]
examples = [
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
    "pandas>=1.4.0"
]

[project.urls]
Homepage = "https://github.com/gpu-worker-pool/gpu-worker-pool"
Documentation = "https://gpu-worker-pool.readthedocs.io/"
Repository = "https://github.com/gpu-worker-pool/gpu-worker-pool.git"
"Bug Tracker" = "https://github.com/gpu-worker-pool/gpu-worker-pool/issues"
Changelog = "https://github.com/gpu-worker-pool/gpu-worker-pool/blob/main/CHANGELOG.md"

[project.scripts]
gpu-worker-pool-status = "gpu_worker_pool.cli:status_command"

[tool.setuptools]
packages = ["gpu_worker_pool"]

[tool.setuptools.package-data]
gpu_worker_pool = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["gpu_worker_pool"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]